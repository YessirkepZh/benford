As time allows:
- update csv handlers to stream data for large files
- add error handling and server codes for axios requests
- rem parsing is done frontend bc tabulator object doubles data size
- rem scripts for utf8, strip quotes, use pipes, delete trailing #
- used view for reactivity but used jinja for templating (small app,
  so not a huge effort spent on componentizing)
- dashboard info vended via api bc reporting info is a common
  pipe out from data flow
- refuse non .csv files and throw error
- if user adds file to lib with sam e name then offer a 'rename' dialog
- go back and add vuex and local components to make it easier to manage data layer

loadFromLibrary = getLibCsv()
  -> csvHeaders, csvData, csvFilename

loadFromLocal = loadLocalCsv()
  -> csvHeaders, csvData, csvFilename


  // create new highcharts and add them to the gallery
      addToGallery: function(){
          // create a container id for the DOM element that will be
          // used to inject the new benny
        var containerId = 'container' + this.bennyCount.toString();

        // push the id to the data layer in order to signal Vue to create
        // the new DOM element
        this.containerIds.push(containerId);
        this.bennyCount += 1;

        // wait for the DOM to add the elelment, then inject it with the new benny
        var self = this;
        Vue.nextTick()
          .then(function () {
            // var title = 'chart' + containerId.toString();
            // self.chartOptions.title.text = title;
            //
            // // update series data in chartoptions template
            // var nuData = [];
            // for ( i = 0; i < 9; i++) {
            //   nuData.push( i * 4 * self.bennyCount );
            // }
            // console.log('nudata: ', nuData);
            // self.chartOptions.series[1].data = nuData;

            // create new highchart and push into bennies to signal Vue
            // to inject it into the DOM element
            var nuchart = Highcharts.chart(containerId, self.chartOptions);
            self.bennies.push(nuchart);
          });

        Notiflix.Notify.Info('Chart added to Gallery');
      },
