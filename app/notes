about section includes
- chi limit set to 8
- analysis is only for non-dropped records
- if analysis shows a distribution of less than 1%, it is not included in results
- headers are transformed to aid display in tabulator
- hash ids weren't used, though in a real app they would be
- backend is AWS S3
- docker hub link
- link to aws api for library
- app doesn't test for numerical only...
  - so, if you have products that start with a numeral, they are fair game
  - however, if you have products that start with an alpha, they are not
- if no records are analyzed, chi result is auto set to 9999, which is of course a failure
- if filename already exists in app library, upload nothing and alert user
- decimals rendered in scientific notation can get picked up, so logic needs more rigor in this area

TO DO
DONE -    put filename on the downloaded table (instead of data.csv)
DONE -    put bullets on results report
if load local file says choose file is '' due to cancel, then preview has legacy data and load button does not work

wire up data store to s3

do the about page
  - link to github
  - link to docker hub
clean up code on github
make docker image on docker hub w/new pip includes
build docker image on aws
Answers to challenges 1 & 2 are in email with links to:
  - db schema
  - vuetoots
deliver

TOOLS USED:
To build The Benny App, I used the following technologies:
Front-end:
HTML, CSS, JavaScript, Bootstrap 4, Vue.js
Tabulator, Highcharts, PapaParse, Moment, Axios

Back-end:
Python, Flask, Jinja2, Pandas
AWS (EC2, S3, Lambda, API Gateway)
